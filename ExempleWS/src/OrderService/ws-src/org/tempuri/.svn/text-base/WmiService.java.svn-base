
package org.tempuri;

import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

import br.com.cea.ecommerce.common.util.EcommerceProperties;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "WmiService", targetNamespace = "http://tempuri.org/", wsdlLocation = "file:/C:/work/cea/workspace/java/EcommerceService/WebContent/WEB-INF/wsdl/Wevo/WmiService.svc.wsdl")
public class WmiService extends Service {

    private final static URL WMISERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(org.tempuri.WmiService.class.getName());

    static {
        URL url = null;
        String endpoint = null;
        try {
        	endpoint = EcommerceProperties.getInstance().getEndpoint();
            URL baseUrl;
            baseUrl = org.tempuri.WmiService.class.getResource(".");
            url = new URL(baseUrl, endpoint);
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: '"+endpoint+"', retrying as a local file");
            logger.warning(e.getMessage());
        } catch (IOException e) {
        	logger.warning("Failed to read the properties file");
            logger.warning(e.getMessage());
		}
        WMISERVICE_WSDL_LOCATION = url;
    }

    public WmiService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WmiService() {
        super(WMISERVICE_WSDL_LOCATION, new QName("http://tempuri.org/", "WmiService"));
    }

    /**
     * 
     * @return
     *     returns IWmiService
     */
    @WebEndpoint(name = "BasicHttpBinding_IWmiService")
    public IWmiService getBasicHttpBindingIWmiService() {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_IWmiService"), IWmiService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IWmiService
     */
    @WebEndpoint(name = "BasicHttpBinding_IWmiService")
    public IWmiService getBasicHttpBindingIWmiService(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_IWmiService"), IWmiService.class, features);
    }

}